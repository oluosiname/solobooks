name: Deploy to production

on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          bundler-cache: true
      # Add or replace database setup steps here
      - name: Set up database schema
        run: bin/rails db:schema:load
      - name: compile assets
        run: bundle exec rake assets:precompile
      - name: Run tests
        run: bundle exec rspec

      - name: Upload coverage results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage
      - name: Upload capybara screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: capybara-screenshots
          path: tmp/capybara/

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          bundler-cache: true
      # Add or replace any other lints here
      # - name: Security audit dependencies
      #   # run: bundle exec bundler-audit --update
      #   run: bundle exec bundler-audit
      - name: Security audit application code
        run: bundle exec brakeman -q -w2
      - name: Lint Ruby files
        run: bundle exec rubocop --parallel
  deploy:
    runs-on: ubuntu-latest
    needs: [test, lint] # Ensure that lint and test jobs run before deploy

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Deploy using Capistrano
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # SSH key stored in GitHub Secrets
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }} # Known hosts to avoid strict host key checking
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "$KNOWN_HOSTS" > ~/.ssh/known_hosts

          bundle exec cap production deploy
